{"name":"MongoDB - flatten.js","body":"# MongoDB - flatten.js #\r\n\r\n[Project Page](http://skratchdot.github.com/mongodb-flatten/)  \r\n[Source Code](https://github.com/skratchdot/mongodb-flatten/)  \r\n[Issues](https://github.com/skratchdot/mongodb-flatten/issues/)  \r\n\r\n## Description: ##\r\n\r\nThe flatten() function is a mapReduce that flattens documents into\r\nkey/value pairs.  Since this is a mapReduce, you can access the \r\nkeys via 'value.data.k' and the values via 'value.data.v'.\r\n\r\n## Usage: ##\r\n\r\n\t// Flatten all user documents, and return the result inline.\r\n\tresult = db.users.flatten();\r\n\t\r\n\t// Flatten all user documents, and store the result in the users_flattened collection\r\n\tresult = db.users.flatten('users_flattened');\r\n\t\r\n\t// Flatten user documents that have the first name of Bob. Store in a collection\r\n\tdb.users.flatten({\r\n\t\t'out' : 'users_flattened',\r\n\t\t'query' : { 'name.first' : 'Bob' }\r\n\t});\r\n\t\r\n\t// Get the number of keys in one document\r\n\tdb.users.flatten({\r\n\t\tquery : { '_id' : ObjectId('4f9c2374992274fc8d468675') }\r\n\t}).results[0].value.data.length;\r\n\r\n## Installation: ##\r\n\r\nDownload: [flatten.js](https://github.com/skratchdot/mongodb-flatten/raw/master/flatten.js)\r\n\r\n### Option 1 ###\r\n\r\nAdd this script to your .mongorc.js file.  \r\n\r\nSee: http://www.mongodb.org/display/DOCS/Overview+-+The+MongoDB+Interactive+Shell#Overview-TheMongoDBInteractiveShell-.mongorc.js\r\n\r\n### Option 2 ###\r\n\r\nStart the shell after executing this script  \r\n\r\n    mongo --shell flatten.js\r\n","tagline":"The flatten() function is a mapReduce that flattens documents into key/value pairs.","google":"UA-10768188-3","note":"Don't delete this file! It's used internally to help with page regeneration."}